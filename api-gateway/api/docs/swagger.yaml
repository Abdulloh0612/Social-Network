definitions:
  models.Comment:
    properties:
      content:
        type: string
      id:
        type: string
      owner_id:
        type: string
      post_id:
        type: string
    type: object
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.StandardErrorModel:
    properties:
      error:
        $ref: '#/definitions/models.Error'
    type: object
  models.User:
    properties:
      biography:
        type: string
      birth_date:
        type: string
      email:
        type: string
      gender:
        type: string
      last_name:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      profile_picture:
        type: string
      user_name:
        type: string
    type: object
  models.UserCreate:
    properties:
      biography:
        type: string
      birth_date:
        type: string
      email:
        type: string
      gender:
        type: string
      last_name:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      profile_picture:
        type: string
      user_name:
        type: string
    type: object
  models.UserResponse:
    properties:
      access_token:
        type: string
      email:
        type: string
      id:
        type: string
      last_name:
        type: string
      name:
        type: string
      password:
        type: string
      refresh_token:
        type: string
      user_name:
        type: string
    type: object
  models.UserUpdate:
    properties:
      biography:
        type: string
      birth_date:
        type: string
      gender:
        type: string
      last_name:
        type: string
      name:
        type: string
      phone_number:
        type: string
      profile_picture:
        type: string
    type: object
info:
  contact: {}
  description: you can use this as social network
  title: Welcome to swagger service
  version: "1.0"
paths:
  /v1/all/user/data:
    get:
      consumes:
      - application/json
      description: Api for get all data
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetAllData
      tags:
      - User
  /v1/login:
    post:
      consumes:
      - application/json
      description: LogIn - Api for login users
      parameters:
      - description: Email
        in: query
        name: email
        type: string
      - description: Username
        in: query
        name: username
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: LogIn User
      tags:
      - Authorizations
  /v1/register/:
    post:
      consumes:
      - application/json
      description: API for user registration
      parameters:
      - description: First name
        in: query
        name: name
        required: true
        type: string
      - description: Last name
        in: query
        name: lastName
        type: string
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      - description: Username
        in: query
        name: userName
        required: true
        type: string
      - description: Phone number
        in: query
        name: phoneNumber
        type: string
      - description: Birth date (YYYY-MM-DD)
        in: query
        name: birthDate
        type: string
      - description: Biography
        in: query
        name: biography
        type: string
      - description: Gender
        in: query
        name: gender
        type: string
      - description: Profile picture URL
        in: query
        name: profilePicture
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: Register
      tags:
      - Authorizations
  /v1/user/update:
    put:
      consumes:
      - application/json
      description: API for updating user by field and value
      parameters:
      - description: Field name for filtering
        in: query
        name: field
        required: true
        type: string
      - description: Value for filtering
        in: query
        name: value
        required: true
        type: string
      - description: updateUserModel
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: UpdateUser
      tags:
      - User
  /v1/users:
    delete:
      consumes:
      - application/json
      description: API for deleting user by field and value
      parameters:
      - description: Field name for filtering
        in: query
        name: field
        required: true
        type: string
      - description: Value for filtering
        in: query
        name: value
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: DeleteUser
      tags:
      - User
    get:
      consumes:
      - application/json
      description: API for retrieving users by page and limit with optional filtering
        and sorting
      parameters:
      - description: Page number for pagination
        in: query
        name: page
        type: string
      - description: Number of items per page
        in: query
        name: limit
        type: string
      - description: Field for filtering
        in: query
        name: field
        type: string
      - description: Value for filtering
        in: query
        name: value
        type: string
      - description: Field to sort by
        in: query
        name: sortBy
        type: string
      - description: Start date for date range filtering (YYYY-MM-DD)
        in: query
        name: startedAt
        type: string
      - description: End date for date range filtering (YYYY-MM-DD)
        in: query
        name: endedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: ListUsers
      tags:
      - User
  /v1/users/create:
    post:
      consumes:
      - application/json
      description: Api for creating a new user
      parameters:
      - description: createUserModel
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: CreateUser
      tags:
      - User
  /v1/verification:
    post:
      consumes:
      - application/json
      description: LogIn - Api for verification users
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: Code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: Verification User
      tags:
      - Authorizations
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
